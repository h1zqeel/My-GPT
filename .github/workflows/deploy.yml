name: Deployment

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deployment:
    concurrency:
      group: ${{ github.head_ref }}
      cancel-in-progress: true
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main'

    strategy:
      matrix:
        node-version: [18.x]
    environment:
      name: Production
      url: https://my-gpt-h1zqeel.is-an.app

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: yarn
      - name: Syncing Files
        uses: burnett01/rsync-deployments@5.1
        with:
          switches: -avzr --delete
          path: ./*
          remote_path: /home/${{secrets.EC2_USER}}/my-gpt
          remote_host:  ${{ secrets.EC2_ELASTIC_IP }}
          remote_user: ${{ secrets.EC2_USER }}
          remote_key: "${{ secrets.EC2_SSH_KEY }}"
      - name: Stoping Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_ELASTIC_IP }}
          username: ${{ secrets.EC2_USER }}
          key: "${{ secrets.EC2_SSH_KEY }}"
          script: pm2 kill
      - name: Running Pending Migrations
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_ELASTIC_IP }}
          username: ${{ secrets.EC2_USER }}
          key: "${{ secrets.EC2_SSH_KEY }}"
          script: cd ~/my-gpt && npx prisma generate && npx prisma migrate deploy
      - name: Building App
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_ELASTIC_IP }}
          username: ${{ secrets.EC2_USER }}
          key: "${{ secrets.EC2_SSH_KEY }}"
          script: cd ~/my-gpt && yarn build
      - name: Starting Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_ELASTIC_IP }}
          username: ${{ secrets.EC2_USER }}
          key: "${{ secrets.EC2_SSH_KEY }}"
          script: cd ~/my-gpt && pm2 start pm2.config.js